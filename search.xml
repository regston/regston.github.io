<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[深度学习预备知识]]></title>
      <url>/2018/02/23/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/</url>
      <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>​    深度学习的理论和模型涉及较多的知识，包括矩阵运算、概率论、信息论、图模型、马尔可夫链蒙特卡罗等方法等等。本文主要对这些预备知识进行梳理和介绍。</p>
<h2 id="矩阵运算"><a href="#矩阵运算" class="headerlink" title="矩阵运算"></a>矩阵运算</h2><p>​    给定两个 $A=(a_{ij})_{m\times n}  $$,B=(b_{ij})_{m\times n }$，他们的阿达马积和克罗内克积定义如下</p>
<p><u><strong>Hadamard product：</strong></u> </p>
<p>​                            $A \circ  B=(a_{ij}\cdot b_{ij})​$ ，又称逐元素积</p>
<p><strong><u>Kronnecker Product：</u></strong> </p>
<script type="math/tex; mode=display">
\begin{equation}
A\otimes B
=\begin{bmatrix}
a_{11}B    & \cdots\ &a_{1n}B\\

 \vdots   & \ddots  & \vdots  \\
 a_{m1}B   & \cdots\ & a_{mn}B\\
\end{bmatrix}
\end{equation}</script><h2 id="概率论的基本概念"><a href="#概率论的基本概念" class="headerlink" title="概率论的基本概念"></a>概率论的基本概念</h2><h3 id="最大似然估计"><a href="#最大似然估计" class="headerlink" title="最大似然估计"></a>最大似然估计</h3><p>​    大量随机事件发生的真是概率通常是无法确知的，但通常可以采用事情发生的概率近似估计，这种用频率估计概率的方法称为<strong>最大似然估计</strong>。</p>
<h3 id="条件概率"><a href="#条件概率" class="headerlink" title="条件概率"></a>条件概率</h3><p>​    如果两个事件$A,B\subseteq \Omega ,P(B)&gt;0$,那么在给定$B$时，A的<strong>条件概率</strong>定义为</p>
<script type="math/tex; mode=display">
P(A\mid B)=\frac{P(AB)}{P(B)}=\frac{P(A \cap B)}{P(B)}</script><p>条件概率$P(A\mid B)$是假定时间$B$发生的情况下事件A发生的概率</p>
<p>​    如果$P(AB)=P(A)P(B)$,那么称事件A和B在概率分布$P$中<strong>独立</strong>，易知，当$P(A\mid B)=P(A)$、$P(B\mid A)=P(B)$、$P(A)=0$或$P(B)=0$ 事件$A$和$B$也是独立的。</p>
<h3 id="随机变量和概率密度函数"><a href="#随机变量和概率密度函数" class="headerlink" title="随机变量和概率密度函数"></a>随机变量和概率密度函数</h3><h3 id="期望和方差"><a href="#期望和方差" class="headerlink" title="期望和方差"></a>期望和方差</h3><h2 id="信息论的基本概念"><a href="#信息论的基本概念" class="headerlink" title="信息论的基本概念"></a>信息论的基本概念</h2>]]></content>
      
        <categories>
            
            <category> 深度学习 </category>
            
            <category> 预备知识 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 预备知识 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[python学习--10分钟看懂函数]]></title>
      <url>/2017/11/22/python%E5%AD%A6%E4%B9%A0--10%E5%88%86%E9%92%9F%E7%9C%8B%E6%87%82%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<h2 id="Python函数"><a href="#Python函数" class="headerlink" title="Python函数"></a>Python函数</h2><p>函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。</p>
<p>函数能提高应用的模块性，和代码的重复利用率。你已经知道Python提供了许多内建函数，比如print()。但你也可以自己创建函数，这被叫做用户自定义函数。</p>
<h2 id="定义一个函数"><a href="#定义一个函数" class="headerlink" title="定义一个函数"></a>定义一个函数</h2><p>你可以定义一个由自己想要功能的函数，以下是简单的规则：</p>
<ul>
<li>函数代码块以 <strong>def</strong> 关键词开头，后接函数标识符名称和圆括号<strong>()</strong> 和：</li>
<li>任何传入参数和自变量必须放在圆括号中间。圆括号之间可以用于定义参数。</li>
<li>​</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">functionname</span><span class="params">( parameters )</span>:</span></span><br><span class="line">   <span class="string">"函数_文档字符串"</span></span><br><span class="line">   function_suite</span><br><span class="line">   <span class="keyword">return</span> [expression]</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[python学习笔记——修改添加和删除元素]]></title>
      <url>/2017/11/22/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E4%BF%AE%E6%94%B9%E6%B7%BB%E5%8A%A0%E5%92%8C%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0/</url>
      <content type="html"><![CDATA[<h3 id="在列表中任意位置插入元素"><a href="#在列表中任意位置插入元素" class="headerlink" title="在列表中任意位置插入元素"></a>在列表中任意位置插入元素</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">motorcycles=[<span class="string">'honda'</span>,<span class="string">'yamaha'</span>,<span class="string">'suzuki'</span>]</span><br><span class="line">motorcycles.insert(<span class="number">0</span>,<span class="string">'ducati'</span>)</span><br><span class="line">print(motorcycles)</span><br></pre></td></tr></table></figure>
<p>方法insert()在索引0处添加空间，并将值’ducati’存储到这个地方。这种操作将列表中既有的每个元素都右移一个位置：</p>
<h3 id="从列表中删除元素"><a href="#从列表中删除元素" class="headerlink" title="从列表中删除元素"></a>从列表中删除元素</h3><h4 id="使用del语句删除元素"><a href="#使用del语句删除元素" class="headerlink" title="使用del语句删除元素"></a>使用del语句删除元素</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">motorcycles = [&apos;honda&apos;, &apos;yamaha&apos;, &apos;suzuki&apos;]</span><br><span class="line">print(motorcycles)</span><br><span class="line">del motorcycles[0]</span><br><span class="line">print(motorcycles)</span><br></pre></td></tr></table></figure>
<p>使用del删除了列表motorcycles中的第一个元素——‘honda’：</p>
<p>使用del可删除任何位置处的列表元素，条件是知道其索引。下例演示了如何删除前述列表<br>中的第二个元素——‘yamaha’：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">motorcycles = [&apos;honda&apos;, &apos;yamaha&apos;, &apos;suzuki&apos;]</span><br><span class="line">print(motorcycles)</span><br><span class="line">del motorcycles[1]</span><br><span class="line">print(motorcycles)</span><br></pre></td></tr></table></figure>
<h4 id="使用pop-删除元素"><a href="#使用pop-删除元素" class="headerlink" title="使用pop()删除元素"></a>使用pop()删除元素</h4>]]></content>
      
        <categories>
            
            <category> python </category>
            
            <category> python学习笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
            <tag> python学习笔记 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
